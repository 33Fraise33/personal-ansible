---
- name: Get postgres container ip
  community.docker.docker_container_info:
    name: postgres
  register: result_containerip

- name: Create a new database with name "n8n"
  community.general.postgresql_db:
    name: n8n
    login_host: "{{ result_containerip.container.NetworkSettings.Networks.services.IPAddress }}"
    login_password: "{{ postgres_password }}"
    login_user: "{{ postgres_user }}"
    encoding: UTF-8
    lc_collate: C
    lc_ctype: C
    template: template0
  delegate_to: localhost
  become: false

- name: Create a volume for n8n data
  community.docker.docker_volume:
    name: data_n8n

- name: Setup n8n docker container
  community.docker.docker_container:
    name: n8n
    image: n8nio/n8n
    networks:
      - name: services
    volumes:
      - data_n8n:/home/node/.n8n
    env:
      DB_TYPE: postgresdb
      DB_POSTGRESDB_DATABASE: n8n
      DB_POSTGRESDB_HOST: postgres
      DB_POSTGRESDB_USER: "{{ postgres_user }}"
      DB_POSTGRESDB_PASSWORD: "{{ postgres_password }}"
      WEBHOOK_URL: https://n8n.frai.se
      N8N_HOST: n8n.frai.se
      N8N_EDITOR_BASE_URL: https://n8n.frai.se
      # N8N_PROXY_HOPS: "1"
      N8N_LOG_LEVEL: debug
    state: started
    restart: true
    restart_policy: always
    pull: true
    labels:
      traefik.http.routers.n8n.tls: "true"
      traefik.http.routers.n8n.tls.certresolver: "le"
      traefik.http.services.n8n.loadbalancer.server.port: "5678"
