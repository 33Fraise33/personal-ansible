# setup prometheus with a docker container
# container from: https://prometheus.io/docs/prometheus/latest/installation/

- import_tasks: blackbox_exporter.yml
  tags: blackbox

- import_tasks: snmp_exporter.yml
  tags: snmp

- import_tasks: solaredge_exporter.yml
  tags: solaredge
  
- import_tasks: speedtest_exporter.yml
  tags: speedtest

- name: Create a volume for prometheus data
  docker_volume:
    name: data_prometheus
  tags: 
    - prometheus

- name: create prometheus config directory
  file:
    path: "{{ item }}"
    state: directory
    mode: 0755
    owner: "{{ nobody.group }}"
    group: "{{ nobody.group }}"
    recurse: yes
  with_items:
    - "{{ docker_config_location }}/prometheus"
  tags: 
    - prometheus
    - config

- name: copy prometheus config
  template:
    src: prometheus.yml.j2
    dest: "{{ docker_config_location }}/prometheus/prometheus.yml"
    owner: "{{ nobody.user }}"
    group: "{{ nobody.group }}"
    mode: 0755
  tags: 
    - prometheus
    - config

- name: copy prometheus files
  copy:
    src: "{{ item }}/"
    dest: "{{ docker_config_location }}/prometheus/{{ item }}/"
    owner: "{{ nobody.user }}"
    group: "{{ nobody.group }}"
    mode: 0755
  loop: 
    - file_sd
    - alerts.d
  tags:
    - prometheus
    - config
    - targets

- name: setup prometheus docker container
  docker_container:
    name: prometheus
    image: prom/prometheus:latest
    networks:
      - name: macvlan333
        ipv4_address: "{{ docker_network.ipv4_prefix }}{{ docker_network.hosts.prometheus}}"
        ipv6_address: "{{ docker_network.ipv6_prefix }}{{ docker_network.hosts.prometheus}}"
    volumes:
      - "{{ docker_config_location }}/prometheus:/config:ro"
      - "data_prometheus:/prometheus"
    command:
      - "--config.file=/config/prometheus.yml"
      - "--storage.tsdb.retention.time=150d"
      - "--web.enable-admin-api"
      - "--web.external-url=https://prometheus.frai.se"
    restart: yes
    restart_policy: always
    state: started
    pull: true
    labels:
      traefik.http.routers.prometheus.tls: "true"
      traefik.http.routers.prometheus.tls.certresolver: "le"
      traefik.http.services.prometheus.loadbalancer.server.port: "9090"
  tags:
    - prometheus

- import_tasks: alertmanager.yml
  tags: alertmanager