- name: Check if items exists
  community.routeros.api:
    hostname: "{{ ansible_host }}"
    password: "{{ ansible_password }}"
    username: "{{ ansible_user }}"
    tls: true
    validate_certs: false
    validate_cert_hostname: false
    path: '{{ item.path }}'
    query: '{{ item.query }}'
  register: items_exists
  loop:
    - { path: '/interface/wireguard', query: 'name WHERE name == {{ wg_interface.name }}' }
    - { path: '/ip/address', query: 'interface WHERE interface == {{ wg_interface.name }}' }
    - { path: '/ipv6/address', query: 'interface WHERE interface == {{ wg_interface.name }}' }

- name: Add wireguard interface if doesn't exist
  community.routeros.api:
    hostname: "{{ ansible_host }}"
    password: "{{ ansible_password }}"
    username: "{{ ansible_user }}"
    tls: true
    validate_certs: false
    validate_cert_hostname: false
    path: "/interface/wireguard"
    add: 'name={{ wg_interface.name }} private-key="{{ wg_interface.private_key }}" mtu={{ wg_interface.mtu }} listen-port={{ wg_interface.port }}'
  when: '"no results" in items_exists.results.0.msg.0'

- name: Add ipv4 if doesn't exist
  community.routeros.api:
    hostname: "{{ ansible_host }}"
    password: "{{ ansible_password }}"
    username: "{{ ansible_user }}"
    tls: true
    validate_certs: false
    validate_cert_hostname: false
    path: "/ip/address"
    add: >-
      interface={{ wg_interface.name }}
      address={{ wg_interface.ip.v4.prefix }}.1/{{ wg_interface.ip.v4.mask }}
  when: '"no results" in items_exists.results.1.msg.0'

- name: Add ipv6 if doesn't exist
  community.routeros.api:
    hostname: "{{ ansible_host }}"
    password: "{{ ansible_password }}"
    username: "{{ ansible_user }}"
    tls: true
    validate_certs: false
    validate_cert_hostname: false
    path: "/ipv6/address"
    add: >-
      interface={{ wg_interface.name }}
      address={{ wg_interface.ip.v6.prefix }}::1/{{ wg_interface.ip.v6.mask }}
  when: '"no results" in items_exists.results.2.msg.0'

- include_tasks:
    file: wg_peers.yaml
  loop: "{{ wg_interface.peers }}"
  loop_control:
    loop_var: wg_peer
    label: wg_peer.name
