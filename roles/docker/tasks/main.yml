---
- name: Debian based Setup
  when: ansible_os_family == "Debian"
  tags: install
  block:
    - name: Install docker dependency packages
      ansible.builtin.apt:
        name:
          - ca-certificates
          - curl
          - gnupg
        state: present
    - name: Install docker gpg key
      ansible.builtin.get_url:
        url: https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg
        dest: /etc/apt/trusted.gpg.d/docker.asc
        mode: "0644"
    - name: Add docker repo
      ansible.builtin.apt_repository:
        repo: "deb [arch=amd64 signed-by=/etc/apt/trusted.gpg.d/docker.asc] \
          https://download.docker.com/linux/\
          {{ ansible_distribution | lower }} \
          {{ ansible_distribution_release }} stable"
        update_cache: true
    - name: Install docker
      ansible.builtin.apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
        state: present

- name: Create systemd config directory
  ansible.builtin.file:
    path: /etc/systemd/system/docker.service.d/
    state: directory
    mode: "0755"
    owner: root
    group: root

- name: Change docker startup command
  ansible.builtin.template:
    src: "{{ item.file }}.j2"
    dest: "{{ item.location }}{{ item.file }}"
    owner: root
    group: root
    mode: "0644"
  loop:
    - file: override.conf
      location: /etc/systemd/system/docker.service.d/
  notify: Restart docker

- name: Force all notified handlers to run at this point, not waiting for normal sync points
  ansible.builtin.meta: flush_handlers

- name: Enable docker service
  ansible.builtin.systemd:
    name: docker
    state: started
    enabled: true

# - name: Install docker ansible dependencies
#   ansible.builtin.pip:
#     name: ['pip', 'docker']
#     state: latest
#   tags: pip, install

- name: Create docker networks
  community.docker.docker_network:
    name: "{{ item.name }}"
    driver: "{{ item.type | default('bridge') }}"
    enable_ipv6: "{{ item.ipv6 | default(false) }}"
    driver_options: "{{ item.driver_options | default(omit) }}"
    ipam_config: "{{ item.ipam | default(omit) }}"
  loop: "{{ docker.networks }}"

- name: Change docker vars (including default subnet)
  ansible.builtin.copy:
    src: "{{ item.file }}"
    dest: "{{ item.location }}{{ item.file }}"
    owner: root
    group: root
    mode: "0644"
  loop:
    - file: daemon.json
      location: /etc/docker/
  notify: Restart docker

- name: Log into DockerHub
  community.docker.docker_login:
    username: "{{ docker.login.username }}"
    password: "{{ docker.login.password }}"
  tags: docker_login

- name: Ddd default_user to docker group
  ansible.builtin.user:
    name: "{{ item }}"
    groups: docker
    append: true
  loop: "{{ docker.users }}"
