- name: Debian based Setup
  block:
    - name: install docker dependency packages
      apt:
        name: ['apt-transport-https', 'ca-certificates', 'software-properties-common', 'gnupg-agent' , 'python3-pip', 'curl']
        state: latest
    - name: install docker gpg key
      apt_key:
        url: https://download.docker.com/linux/{{ansible_distribution | lower}}/gpg
        state: present
    - name: Add Docker repository
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/{{ansible_distribution | lower}} {{ ansible_distribution_release }} stable"
        update_cache: yes
    - name: install docker
      apt:
        name: ['docker-ce', 'docker-ce-cli', 'containerd.io']
        state: latest
        update_cache: yes
  when: ansible_os_family == "Debian"
  tags: install

- name: Arch based setup
  block:
    - name: install docker ce
      pacman:
        name: docker
        state: latest
  when: ansible_os_family == "Archlinux"

- name: create systemd config directory
  file:
    path: /etc/systemd/system/docker.service.d/
    state: directory
    mode: 0755
    owner: root
    group: root

- name: change docker startup command
  template:
    src: "{{ item.file }}.j2"
    dest: "{{ item.location }}{{ item.file }}"
    owner: root
    group: root
    mode: 0644
  with_items:
    - { file: override.conf, location: /etc/systemd/system/docker.service.d/ }
  notify: restart docker

- name: Force all notified handlers to run at this point, not waiting for normal sync points
  ansible.builtin.meta: flush_handlers

- name: enable docker service
  systemd:
    name: docker
    state: started
    enabled: yes

- name: install docker ansible dependencies
  pip:
    name: ['pip', 'docker']
    state: latest
  tags: pip, install

- name: create docker macvlan333 network
  docker_network:
    name: macvlan333
    driver: macvlan
    enable_ipv6: yes
    driver_options:
      parent: "{{ ansible_default_ipv4.interface }}.333"
    ipam_config:
      - subnet: '10.33.0.0/24'
        gateway: '10.33.0.1'
      - subnet: "{{ docker_network.ipv6_prefix }}/64"
        gateway: "{{ docker_network.ipv6_prefix }}1"

- name: create docker macvlan50 network
  docker_network:
    name: macvlan50
    driver: macvlan
    driver_options:
      parent: "{{ ansible_default_ipv4.interface }}.50"
    ipam_config:
      - subnet: '172.16.50.0/24'
        gateway: '172.16.50.1'
        iprange: 172.16.50.64/29

- name: change docker vars (including default subnet)
  copy:
    src: "{{ item.file }}"
    dest: "{{ item.location }}{{ item.file }}"
    owner: root
    group: root
    mode: 0644
  with_items:
    - { file: daemon.json, location: /etc/docker/ }
  notify: restart docker

- name: Log into DockerHub
  docker_login:
    username: 33fraise33
    password: "{{ docker_pass }}"
  tags: docker_login

- name: add default_user to docker group
  user:
    name: "{{ default_user }}"
    groups: docker
    append: yes
