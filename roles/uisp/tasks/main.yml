# setup uisp with a docker container
# container from: https://hub.docker.com/r/nico640/docker-unms
---
- name: Create a volume for uisp content
  community.docker.docker_volume:
    name: data_uisp

- name: Setup uisp docker container
  community.docker.docker_container:
    name: uisp
    image: nico640/docker-unms:latest
    networks:
      - name: networking
        ipv4_address: "{{ docker.networks.networking.ipam[0].subnet \
          | ansible.utils.ipsubnet(24, 0) \
          | ansible.utils.ipaddr(docker.networks.networking.hosts.uisp) \
          | ansible.utils.ipaddr('address') }}"
        ipv6_address: "{{ docker.networks.networking.ipam[1].subnet | ansible.utils.ipaddr('network') }}\
          {{ docker.networks.networking.hosts.uisp }}"
    dns_servers:
      - "{{ dns_servers.adguard.dco.ipv6 }}"
      - "{{ dns_servers.adguard.dco.ip }}"
      - "{{ dns_servers.adguard.home.ipv6 }}"
      - "{{ dns_servers.adguard.home.ip }}"
    volumes:
      - "data_uisp:/config"
    env:
      TZ: Europe/Brussels
      QUIET_MODE: "1"
    restart: true
    restart_policy: always
    state: started
    pull: true
    labels:
      traefik.http.routers.uisp.rule: "Host(`uisp.unitix.be`)"
      traefik.http.routers.uisp.tls: "true"
      traefik.http.routers.uisp.tls.certresolver: "le"
      traefik.http.services.uisp.loadbalancer.server.port: "443"
      traefik.http.services.uisp.loadbalancer.server.scheme: "https"
