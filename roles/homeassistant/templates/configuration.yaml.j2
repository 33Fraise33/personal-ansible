# Configure a default setup of Home Assistant (frontend, api, etc)
default_config:

http:
  use_x_forwarded_for: true
  trusted_proxies:
    - "{{ traefik.home.ip }}"
    - "{{ traefik.home.ipv6 }}"
    
# Text to speech
tts:
  - platform: google_translate

group: !include groups.yaml
automation: !include automations.yaml
script: !include scripts.yaml
scene: !include scenes.yaml
homeassistant:
  customize: !include customize.yaml
frontend:
  themes: !include_dir_merge_named themes

shopping_list:

cover: 
  - platform: template
    covers: 
      garage_door: 
        device_class: garage
        friendly_name: "Garage Door"
        open_cover:
          - condition: state
            entity_id: binary_sensor.fibaro_door_window_sensor_2_window_door_is_open
            state: "off"
          - service: switch.toggle
            target:
              entity_id: switch.node_31
        close_cover:
          service: switch.toggle
          target:
            entity_id: switch.node_31
        stop_cover:
          service: switch.toggle
          target:
            entity_id: switch.node_31
        {% raw -%}
        value_template: >- 
          {% if is_state('binary_sensor.fibaro_door_window_sensor_2_window_door_is_open', 'on') %}
            open
          {% else %}
            closed
          {% endif %}
        {% endraw %}

sensor:
  - platform: afvalbeheer
    wastecollector: RecycleApp
    resources:
      - restafval
      - gft
      - papier
      - pmd
    postcode: 8490
    streetname: Eernegemweg
    streetnumber: 96

{% raw %}
alarm_control_panel:
  - platform: template
    panels:
      ultrasync_alarm:
        code_format: no_code
        value_template: >
          {% if is_state('sensor.ultrasync_alarm_area2state', 'Armed Away') %}
            armed_away
          {% elif is_state('sensor.ultrasync_alarm_area2state', 'Armed Stay') %}
            armed_home
          {% else %}
            disarmed
          {% endif %}
        disarm:
          - service: ultrasync.disarm
{% endraw %}
    
prometheus:
  namespace: "homeassistant"
  filter:
    include_entity_globs:
      - sensor.*power*
      - sensor.*energy*
      - sensor.*gas*

google_assistant:
  project_id: ha-assistant-57f43
  service_account: !include service_account.json
  report_state: true

spotcast:
  sp_dc: {{ ha.spotify_dc }}
  sp_key: {{ ha.spotify_key }}
  country: BE

{% raw %}
media_player:
  - platform: universal
    name: Living AVR
    unique_id: denon_living_avr_combined
    device_class: receiver
    children:
      - media_player.living_avr       # Denon AVR Integration entity
      - media_player.heos_avr_2  # Denon HEOS Integration entity
    browse_media_entity: media_player.heos_avr_2
    commands:
      turn_off:
        action: media_player.turn_off
        data:
          entity_id: media_player.living_avr
      turn_on:
        action: media_player.turn_on
        data:
          entity_id: media_player.living_avr
      volume_up:
        action: media_player.volume_up
        data:
          entity_id: media_player.living_avr
      volume_down:
        action: media_player.volume_down
        data:
          entity_id: media_player.living_avr
      select_sound_mode:
        action: media_player.select_sound_mode
        target:
          entity_id: media_player.living_avr
        data:
          sound_mode: "{{ sound_mode }}"
    state_template: >
      {% if is_state('media_player.living_avr', 'off') %}
        off
      {% else %}
        {{ states('media_player.living_avr') }}
      {% endif %}
    attributes:
      sound_mode: media_player.living_avr|sound_mode
      sound_mode_raw: media_player.living_avr|sound_mode_raw
      sound_mode_list: media_player.living_avr|sound_mode_list
      media_title: media_player.heos_avr_2|media_title
      media_artist: media_player.heos_avr_2|media_artist
      media_album_name: media_player.heos_avr_2|media_album_name
      entity_picture: media_player.heos_avr_2|entity_picture
{% endraw %}
