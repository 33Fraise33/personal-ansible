# https://hub.docker.com/r/matrixdotorg/dendrite
---
- name: Get postgres container ip
  community.docker.docker_container_info:
    name: postgres
  register: result_containerip

- name: Create synapse config directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: "0755"
    owner: "991"
    group: "991"
  loop:
    - "{{ docker.dir.config }}/synapse"

- name: Copy config template to server
  ansible.builtin.template:
    src: "{{ item }}.j2"
    dest: "{{ docker.dir.config }}/synapse/{{ item }}"
    mode: "0644"
  tags: config
  loop:
    - frai.se.signing.key
    - homeserver.yaml
    - frai.se.log.config

- name: Create a new database with name "synapse"
  community.general.postgresql_db:
    name: synapse
    login_host: "{{ result_containerip.container.NetworkSettings.Networks.services.IPAddress }}"
    login_password: "{{ postgres_password }}"
    login_user: "{{ postgres_user }}"
    # required for synapse
    encoding: UTF-8
    lc_collate: C
    lc_ctype: C
    template: template0
  delegate_to: localhost
  become: false

- name: Create matrix postgres user
  community.general.postgresql_user:
    name: "{{ matrix_postgres_user }}"
    password: "{{ matrix_postgres_pass }}"
    login_db: synapse
    login_host: "{{ result_containerip.container.NetworkSettings.Networks.services.IPAddress }}"
    login_password: "{{ postgres_password }}"
    login_user: "{{ postgres_user }}"
  delegate_to: localhost
  become: false

- name: Set matrix postgres permissions
  community.general.postgresql_privs:
    roles: "{{ matrix_postgres_user }}"
    privs: ALL
    type: "{{ item.type }}"
    login_db: synapse
    objs: "{{ item.objs }}"
    login_host: "{{ result_containerip.container.NetworkSettings.Networks.services.IPAddress }}"
    login_password: "{{ postgres_password }}"
    login_user: "{{ postgres_user }}"
  delegate_to: localhost
  become: false
  loop:
    - type: database
      objs: "{{ omit }}"
    - type: schema
      objs: "public"

- name: Create a volume for persistent media
  community.docker.docker_volume:
    name: "{{ item }}"
  loop:
    - data_synapse_media

- name: Set permissions to data volume for synapse
  ansible.builtin.file:
    path: "{{ docker.dir.data }}/docker/volumes/data_synapse_media/_data"
    state: directory
    mode: "0755"
    owner: "991"
    group: "991"

- name: Start synapse docker container
  community.docker.docker_container:
    name: matrix
    image: ghcr.io/element-hq/synapse:latest
    networks:
      - name: services
    dns_servers:
      - "{{ dns_servers.adguard.dco.ipv6 }}"
      - "{{ dns_servers.adguard.dco.ip }}"
      - "{{ dns_servers.adguard.home.ipv6 }}"
      - "{{ dns_servers.adguard.home.ip }}"
    volumes:
      - "{{ docker.dir.config }}/synapse:/data"
      - "data_synapse_media:/data/media"
    healthcheck:
      test: ["CMD", "curl", "-fSs", "http://localhost:8008/health"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 5s
    restart: true
    restart_policy: always
    state: healthy
    pull: true
    labels:
      traefik.http.routers.synapse.rule: "Host(`{{ matrix_base_url }}`)"
      traefik.http.routers.synapse.tls: "true"
      traefik.http.routers.synapse.tls.certresolver: "le"
      traefik.http.services.synapse.loadbalancer.server.port: "8008"

- name: Create admin user
  ansible.builtin.command: docker exec matrix bash -l -c "register_new_matrix_user -c \
    /data/homeserver.yaml -u {{ matrix_admin }} -p {{ matrix_admin_password }} -a https://{{ matrix_base_url }}"
  failed_when: false
  changed_when: true
  tags: never,createadmin
