# https://hub.docker.com/r/matrixdotorg/synapse

- name: create matrix directories
  file:
    path: "{{ item }}"
    state: directory
    mode: 0755
    owner: "{{ nobody.user }}"
    group: "{{ nobody.group }}"
    recurse: yes
  with_items:
    - "{{ docker_data_location }}/synapse"
    - "{{ docker_config_location }}/synapse"
    - "{{ docker_data_location }}/matrix-bridges"
  tags: synapse

- name: Check if synapse config already exists
  stat:
    path: "{{ docker_config_location }}/synapse/homeserver.yaml"
  tags: synapse
  register: synapse_config

- name: generate synapse config
  docker_container:
    name: synapse
    image: matrixdotorg/synapse:latest
    command: generate
    networks:
      - name: macvlan333
        ipv4_address: "{{ docker_network.synapse}}"
    purge_networks: yes
    volumes:
      - "{{ docker_config_location }}/synapse:/config"
      - "{{ docker_data_location }}/synapse:/data"
    user: "{{ nobody.user }}:{{ nobody.group }}"
    env:
      SYNAPSE_SERVER_NAME: "{{ matrix_server_name }}"
      SYNAPSE_REPORT_STATS: "no"
      SYNAPSE_CONFIG_DIR: "/config"
      SYNAPSE_DATA_DIR: "/data"
      UID: "{{ nobody.user }}"
      GID: "{{ nobody.group }}"
    state: started
    pull: true
    labels:
      traefik.enable: "false"
  tags: synapse
  when: not synapse_config.stat.exists

- name: wait for config to be generated
  pause:
    seconds: 10
  tags: synapse
  when: not synapse_config.stat.exists

- import_tasks: config.yaml
  tags: synapse

- name: Create a new database with name "synapse"
  community.general.postgresql_db:
    name: synapse
    login_host: "{{ docker_network.postgres }}"
    login_password: "{{ postgres_password }}"
    login_user: "{{ postgres_user }}"
    encoding: UTF-8
    lc_collate: C
    lc_ctype: C
    template: template0
  tags: synapse

- name: Start synapse docker container
  docker_container:
    name: synapse
    image: matrixdotorg/synapse:latest
    networks:
      - name: macvlan333
        ipv4_address: "{{ docker_network.synapse}}"
    purge_networks: yes
    volumes:
      - "{{ docker_config_location }}/synapse:/config"
      - "{{ docker_data_location }}/synapse:/data"
      - "{{ docker_data_location }}/matrix-bridges:/bridges"
    user: "{{ nobody.user }}:{{ nobody.group }}"
    env:
      SYNAPSE_CONFIG_DIR: "/config"
      UID: "{{ nobody.user }}"
      GID: "{{ nobody.group }}"
      TZ: "Europe/Brussels"
    restart: yes
    restart_policy: always
    state: started
    pull: true
    labels:
      traefik.http.routers.synapse.rule: "Host(`{{ matrix_base_url }}`)"
      traefik.http.routers.synapse.tls: "true"
      traefik.http.routers.synapse.tls.certresolver: "le"
      traefik.http.services.synapse.loadbalancer.server.port: "8008"
  tags: synapse

- name: wait for container to be healthy
  pause:
    seconds: 70
  tags: synapse

- name: create admin user
  command: docker exec synapse bash -l -c "register_new_matrix_user -c /config/homeserver.yaml -u {{ synapse_admin }} -p {{ synapse_admin_password }} -a https://{{ matrix_base_url }}"
  tags: synapse

- import_tasks: telegram.yaml
  tags: telegram

- import_tasks: whatsapp.yaml
  tags: whatsapp

- import_tasks: slack.yaml
  tags: slack
