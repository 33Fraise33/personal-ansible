# https://github.com/Sorunome/mx-puppet-slack

- name: create bridge directory
  file:
    path: "{{ docker_data_location }}/matrix-bridges/puppet-slack"
    state: directory
    mode: 0755
    owner: "{{ nobody.user }}"
    group: "{{ nobody.group }}"
    recurse: yes

- name: get sample config
  get_url:
    url: https://raw.githubusercontent.com/Sorunome/mx-puppet-slack/master/sample.config.yaml
    dest: "{{ docker_data_location }}/matrix-bridges/puppet-slack/config.yaml"
    mode: 0644
    owner: "{{ nobody.user }}"
    group: "{{ nobody.group }}"

- name: set slack config items
  lineinfile:
    path: "{{ docker_data_location }}/matrix-bridges/puppet-slack/config.yaml"
    regexp: "{{ item.regex }}"
    line: "{{ item.line }}"
    insertafter: "{{ item.insert }}"
    firstmatch: yes
  with_items:
    - regex: "^  bindAddress:"
      line: "  bindAddress: {{ docker_network.ipv4_prefix }}{{ docker_network.hosts.puppet_slack }}"
      insert: ""
    - regex: "^  domain:"
      line: "  domain: {{ matrix_server_name }}"
      insert: ""
    - regex: "^  homeserverUrl:"
      line: "  homeserverUrl: https://{{ matrix_base_url }}"
      insert: ""
    - regex: "^  enabled:"
      line: "  enabled: true"
      insert: "^oauth:"
    - regex: "^  clientId:"
      line: '  clientId: "{{ slack_client_id }}"'
      insert: ""
    - regex: "^  clientSecret:"
      line: "  clientSecret: {{ slack_secret }}"
      insert: ""
    - regex: "^  redirectUri:"
      line: "  redirectUri: https://frai.se/slack/oauth"
      insert: ""
    - regex: "^  connString: "
      # urlencode does not work on vault items: https://github.com/ansible/ansible/issues/73054
      line: '  connString: "postgres://{{ postgres_user }}:{{ postgres_password | regex_replace("#","%23") }}@{{ docker_network.ipv4_prefix }}{{ docker_network.hosts.postgres }}/slack?sslmode=disable"'
      insert: "^  # Modify each value as"
    - regex: '^    - "@.*'
      line: '    - "@gianni:frai.se"'
      insert: "^  whitelist:"
    - regex: '^  user:'
      line: '  user: :name (Slack)'
      insert: ""


- name: set slack config items
  lineinfile:
    path: "{{ docker_data_location }}/matrix-bridges/puppet-slack/config.yaml"
    regexp: "{{ item }}"
    state: absent
  with_items:
    - "@.*:yourserver"
    - ".*filename:.*database.db"

- name: Create a new database with name "slack"
  community.general.postgresql_db:
    name: slack
    login_host: "{{ docker_network.ipv4_prefix }}{{ docker_network.hosts.postgres }}"
    login_password: "{{ postgres_password }}"
    login_user: "{{ postgres_user }}"
    encoding: UTF-8
    lc_collate: C
    lc_ctype: C
    template: template0

- name: Start slack bridge docker container (create config file)
  docker_container:
    name: puppet-slack
    image: sorunome/mx-puppet-slack:latest
    networks:
      - name: macvlan333
        ipv4_address: "{{ docker_network.ipv4_prefix }}{{ docker_network.hosts.puppet_slack}}"
    purge_networks: yes
    volumes:
      - "{{ docker_data_location }}/matrix-bridges/puppet-slack:/data"
    env:
      UID: "{{ nobody.user }}"
      GID: "{{ nobody.group }}"
    state: started
    restart_policy: always
    pull: true
    labels:
      traefik.enable: "false"

- name: set synapse config items
  lineinfile:
    path: "{{ docker_config_location }}/synapse/homeserver.yaml"
    regexp: "{{ item.regex }}"
    line: "{{ item.line }}"
    insertafter: "{{ item.insert }}"
  with_items:
    - regex: "^  - /bridges/puppet-slack"
      line: "  - /bridges/puppet-slack/slack-registration.yaml"
      insert: "^  - /bridges/mautrix-whatsapp/"
  notify: restart synapse container
